version: 2

# These directories are cached across all builds, currently with no
# hashing mechanism, but we should consider doing it off dev_bundle.
meteor_cache_dirs: &meteor_cache_dirs
  paths:
    - "dev_bundle"
    - ".babel-cache"
    - ".meteor"

# A reusable "run" snippet which is ran before each test to setup the
# environment for user-limits, core-dumps, etc.
run_env_change: &run_env_change
  name: Environment Changes
  command: |
    # Make a place to core dumps to live.
    sudo mkdir -p /tmp/core_dumps
    sudo chmod a+rwx /tmp/core_dumps

    # Make a place for JUnit tests to live.
    sudo mkdir -p /tmp/results/junit
    sudo chmod -R a+rwx /tmp/results/

    # Bake the locale we expect into the image.
    echo "en_US.UTF-8 UTF-8" | sudo tee /etc/locale.gen
    sudo locale-gen

    # The commands below don't work in Docker images, but might be worth
    # reenabling if we switch back to machine:true instead of Docker.

    # Set the pattern for core dumps, so we can find them.
    # echo kernel.core_pattern="/tmp/core_dumps/core.%e.%p.%h.%t" | \
    #     sudo tee -a /etc/sysctl.conf

    # Note that since every "run" command starts its own shell, and I wasn't
    # able to set this at a system wide level for all users, it's necessary to
    # run "ulimit -c unlimited" before each command which you want to (possibly)
    # output a core dump.

    # Raise inotify user watches up higher.
    # echo fs.inotify.max_user_watches=524288 | \
    #     sudo tee -a /etc/sysctl.conf

    # Reload sysctl so these are in effect.
    # sudo sysctl -p

# A reusable "run" snippet which enables the continued logging of memoryusage
# to a file on disk which can be saved to build artifacts for later analysis.
run_log_mem_use: &run_log_mem_use
  background: true
  name: Setup Memory Logging
  command: |
    # Log memory usage throughout entire build.
    MEMUSELOG=/tmp/memuse.txt /bin/bash -c '\
        while true; do\
          ps -u $USER -e -o pid,%cpu,%mem,rss:10,vsz:10,command:20 \
            --sort=-%mem >> $MEMUSELOG; \
          echo "----------" >> $MEMUSELOG; \
          sleep 1; \
        done'

# A reusable "run" snippet for saving the Node binary if a core dump is present.
run_save_node_bin: &run_save_node_bin
  name: Save Node Binary
  when: on_fail
  command: |
    if compgen -G "/tmp/core_dumps/core.*" > /dev/null; then
      echo "Saving Node binary since Core dump is present..."
      cp dev_bundle/bin/node /tmp/core_dumps/node
    fi

# This environment is set to every job (and the initial build).
build_machine_environment: &build_machine_environment
  # Specify that we want an actual machine (ala Circle 1.0), not a Docker image.
  docker:
    - image: meteor/circleci
  environment:
    # This multiplier scales the waitSecs for selftests.
    TIMEOUT_SCALE_FACTOR: 8

    # Retry failed tests additional times.
    METEOR_SELF_TEST_RETRIES: 2

    # These, mostly overlapping, flags ensure that CircleCI is as pretty as
    # possible for a non-interactive environment.  See also: --headless.
    METEOR_HEADLESS: true
    METEOR_PRETTY_OUTPUT: 0

    # In an effort to stop SIGSEGV, this just doesn't bother cleaning up
    # the mess of temp directories that Meteor makes.
    METEOR_SAVE_TMPDIRS: 1

    # Skip these tests on every test run.
    # If needed, for readability this should be a regex wrapped across
    # multiple lines in quotes.
    SELF_TEST_EXCLUDE: ""

    # These will be evaled before each command.
    PRE_TEST_COMMANDS: |-
        ulimit -c unlimited; # Set core dump size as Ubuntu 14.04 lacks prlimit.
        ulimit -n 4096; # CircleCI default is soft 1024, hard 4096. Take it all.

    # Enable the Garbage Collection `gc` object to be exposed so we can try
    # to our own, hopefully more graceful, technique.
    TOOL_NODE_FLAGS: --expose-gc

    # This is only to make Meteor self-test not remind us that we can set
    # this argument for self-tests.
    SELF_TEST_TOOL_NODE_FLAGS: " "

jobs:
  Get Ready:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - checkout
      - run:
          # https://discuss.circleci.com/t/git-submodule-url-isnt-playing-nice-with-the-cache/549/3
          name: Git Submodules.
          command: (git submodule sync && git submodule update --init --recursive) || (rm -fr .git/config .git/modules && git submodule deinit -f . && git submodule update --init --recursive)
      - restore_cache:
          key: meteor-cache
      - run:
          name: Get Ready
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor --get-ready
          # shouldn't take longer than 20 minutes
          no_output_timeout: 20m
      # Clear dev_bundle/.npm to ensure consistent test runs.
      - run:
          name: Clear npm cache
          command: ./meteor npm cache clear --force
      - run:
          <<: *run_save_node_bin
      - persist_to_workspace:
          root: .
          paths: .
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  save_caches:
    <<: *build_machine_environment
    steps:
      - attach_workspace:
          at: .
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs

  Group 0:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running warehouse self-tests"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/0-1.xml \
              --with-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          name: "Running self-test (0): A-Comm"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/0-2.xml \
              --file '^[a-b]|^c[a-n]|^co[a-l]|^comm' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 1:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (1): Comn-Comz"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/1.xml \
              --file '^com[n-z]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 2:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (2): Con-Coz"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/2.xml \
              --file '^co[n-z]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 3:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (3): Cp-He"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/3.xml \
              --file '^c[p-z]|^[d-g]|^h[a-e]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 4:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (4): Hf-Hz"
          command:  |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/4.xml \
              --file '^h[f-z]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 5:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (5): I-L"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/5.xml \
              --file '^[i-l]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 6:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (6): Ma-Mod"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/6.xml \
              --file '^m[a-n]|^mo[a-d]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 7:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (7): Moe-O"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/7.xml \
              --file '^mo[e-z]|^m[p-z]|^[n-o]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 8:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (8): P-Re"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/8.xml \
              --file '^[p-q]|^r[a-e]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 9:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (9): Rf-Rz"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/9.xml \
              --file '^r[f-z]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 10:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (10): S"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/10.xml \
              --file '^s' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Group 11:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running self-test (11): T-Z"
          command: |
            eval $PRE_TEST_COMMANDS;
            ./meteor self-test \
              --retries ${METEOR_SELF_TEST_RETRIES} \
              --exclude "${SELF_TEST_EXCLUDE}" \
              --headless \
              --junit /tmp/results/junit/11.xml \
              --file '^[t-z]' \
              --without-tag "custom-warehouse"
          no_output_timeout: 20m
      - run:
          <<: *run_save_node_bin
      - save_cache:
          key: meteor-cache
          <<: *meteor_cache_dirs
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  # Test the JSDoc declarations which live within this codebase against the
  # Meteor Docs (https://github.com/meteor/docs) repository, where they'll
  # eventually be consumed.  This test aims to provide an early warning of
  # potentially breaking changes, so they aren't discovered when the docs are
  # next updated, which generally occurs during major Meteor version releases
  # (for example, 1.4 to 1.5, 1.5 to 1.6).
  Docs:
    docker:
      # This Node version should match that in the meteor/docs CircleCI config.
      - image: circleci/node:8
    environment:
      CHECKOUT_METEOR_DOCS: /home/circleci/test_docs
    steps:
      - run:
          name: Cloning "meteor/docs" Repository's "master" branch
          command: |
            git clone https://github.com/meteor/docs.git ${CHECKOUT_METEOR_DOCS}
      # The "docs" repository normally brings in the Meteor code as a Git
      # submodule checked out into the "code" directory.  As the goal of this
      # test is to run it against the _current_ repository's code, we'll move
      # the "code" directory out of the way and move the checkout (of meteor)
      # into that directory, rather than the default $CIRCLE_WORKING_DIRECTORY.
      - checkout
      - run:
          name: Move Meteor checkout into docs repository's "code" directory
          command: |
            rmdir "${CHECKOUT_METEOR_DOCS}/code"
            # $CIRCLE_WORKING_DIRECTORY uses a tilde, so expand it to $HOME.
            mv "${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}" \
              "${CHECKOUT_METEOR_DOCS}/code"
      # Run almost the same steps the meteor/docs repository runs, minus deploy.
      - run:
          name: Generating Meteor documentation for JSDoc testing
          command: |
            cd ${CHECKOUT_METEOR_DOCS}
            npm install
            npm test

workflows:
  version: 2
  Build and Test:
    jobs:
      - Docs
      - Get Ready
      - Group 0:
          requires:
            - Get Ready
      - Group 1:
          requires:
            - Get Ready
      - Group 2:
          requires:
            - Get Ready
      - Group 3:
          requires:
            - Get Ready
      - Group 4:
          requires:
            - Get Ready
      - Group 5:
          requires:
            - Get Ready
      - Group 6:
          requires:
            - Get Ready
      - Group 7:
          requires:
            - Get Ready
      - Group 8:
          requires:
            - Get Ready
      - Group 9:
          requires:
            - Get Ready
      - Group 10:
          requires:
            - Get Ready
      - Group 11:
          requires:
            - Get Ready
